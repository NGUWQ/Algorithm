堆:
堆是一种树,它实现的优先级队列的插入和删除的时间复杂度都是O(logN)
数组实现的优先级队列删除最大数据项的时间复杂度为O(1) 但插入需要O(N)的时间

堆的特点:
它是完全二叉树
常常用一个数组实现
堆中的每一个节点都满足条件,即每一个节点的关键字都大于或等于它的子节点的关键字

java中用vector类对象取代了数组,因为vector类对象支持动态扩展

堆排序(对任意顺序的数据,排序时间复杂度都是O(N*logN))

小结:
在一个升序的优先级队列中,最大关键字的数据项被称为右最高的优先级。反之亦然
优先级队列是提供了数据插入和移除最大数据项方法的抽象数据类型(ADT)
堆是优先级队列ADT的有效的实现形式
最大数据项总是在根的位置上
堆不能有序地遍历所有的数据,不能找到特定关键字数据项的位置,也不能移除特定关键字的数据项
堆通常用数组来实现,表现为一颗完全二叉树.根节点的下标为0,最后一个节点的下标为N-1
每一个节点的关键字都小于它的父节点,大于它的子节点
要插入的数据项总是先被存放到数组第一个空的单元中,然后再向上筛选它直至适当的位置
当从根移除一个数据项时,用数组中最后一个数据项取代它的位置,然后再向下筛选这个节点至适当的位置
向上筛选和向下筛选算法可以被看作时一系列的交换,但更有效的做法时进行一系列的复制.
可以更改任何一个数据项的优先级,1.更改它的关键字.2.如果关键字增加了，数据项就向上筛选。否则就向下筛选。
堆的实现科基于二叉树,它映射堆的结构
存在再树堆中查找最后一个节点或者第一个空的单元的算法
堆排序是一种高效的排序过程,它的时间复杂度为O（N*logN）
在概念上堆排序的过程包括先在队中插入N次,然后再作N次移除
通过对无序数组中的N/2个数据项施用向下筛选算法,而不做N次插入,可以使堆排序的运行速度更快
可以使用同一个数组来存放初始无序的数据,堆以及最后有序的数据.因此堆排序不需要额外的存储空间.